---
- name: Write link files
  become: yes
  template:
    src: device.link
    dest: "{{networkd_config_root}}/10-{{ item.key }}.link"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item.value.mac is defined
  with_dict: "{{ interfaces }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- name: Write vlan uplink files
  become: yes
  template:
    src: vlanuplink.network
    dest: "{{networkd_config_root}}/50-{{ item.key }}.network"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item.value.vlans is defined and (item.value.vlans | length > 0)
  with_dict: "{{ interfaces }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- name: Write link-to-bridge files
  become: yes
  template:
    src: linktobridge.network
    dest: "{{networkd_config_root}}/50-{{ item.key }}.network"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item.value.bridge is defined
  with_dict: "{{ interfaces }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- name: Write vlan network files
  become: yes
  template:
    src: vlan.network
    dest: "{{networkd_config_root}}/50-vlan{{item.key}}.network"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item is defined
  with_dict: "{{ vlans }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- name: Write vlan netdev files
  become: yes
  template:
    src: vlan.netdev
    dest: "{{networkd_config_root}}/00-vlan{{item.key}}.netdev"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item is defined
  with_dict: "{{ vlans }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- name: Write bridge netdev files
  become: yes
  template:
    src: bridge.netdev
    dest: "{{networkd_config_root}}/30-{{item.value.name}}.netdev"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item is defined
  with_dict: "{{ vlans }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- name: Write bridge network files
  become: yes
  template:
    src: bridge.network
    dest: "{{networkd_config_root}}/30-{{item.value.name}}.network"
    owner: root
    group: root
    force: yes
    mode: 0644
  register: template_results
  when: item is defined
  with_dict: "{{ vlans }}"
#  notify: restart systemd-networkd

- set_fact:
    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

#- debug:
#    var: raw
#    verbosity: 0
#
#- name: Write raw files
#  become: yes
#  template:
#    src: raw.networkd
#    dest: "{{networkd_config_root}}/{{item.name}}.{{item.type}}"
#    owner: root
#    group: root
#    force: yes
#    mode: 0644
#  register: template_results
#  when: item is defined
#  with_items: "{{ raw }}"
##  notify: restart systemd-networkd
#
#- set_fact:
#    managed_files: "{{ managed_files }} + {{ template_results.results|selectattr('invocation', 'defined')|map(attribute='invocation.module_args.dest')|list }}"

- debug:
    var: managed_files
    verbosity: 0

- name: Delete unmanaged files
  become: yes
  command: "find {{networkd_config_root}} -type f -not -wholename {{ managed_files | join(' -not -wholename ') }} -delete"
