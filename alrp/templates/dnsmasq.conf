domain-needed

# Uncomment these to enable DNSSEC validation and caching:
# (Requires dnsmasq to be built with DNSSEC option.)
#conf-file=/usr/share/dnsmasq/trust-anchors.conf
#dnssec

# Replies which are not DNSSEC signed may be legitimate, because the domain
# is unsigned, or may be forgeries. Setting this option tells dnsmasq to
# check that an unsigned reply is OK, by finding a secure proof that a DS 
# record somewhere between the root and the domain does not exist. 
# The cost of setting this is that even queries in unsigned domains will need
# one or more extra DNS queries to verify.
#dnssec-check-unsigned

no-resolv
server=1.1.1.1
server=1.0.0.1
# server=127.0.0.1#55

# Interfaces:
{% if hostvars[inventory_hostname].interfaces is defined %}
{% for interfaceName in hostvars[inventory_hostname].interfaces %}
{% set interface = hostvars[inventory_hostname].interfaces[interfaceName] %}
{% if interface.dhcp is defined %}
{% if interface.dhcp.enabled %}
interface={{ interfaceName }}
dhcp-range={{ interfaceName }}, {{ interface.dhcp.rangeStart }}, {{ interface.dhcp.rangeEnd }}, 48h
{% endif %}
{% endif %}
{% endfor %}
{% endif %}

# VLANS:
{% if hostvars[inventory_hostname].vlans is defined %}
{% for vlan in hostvars[inventory_hostname].vlans.values() %}
{% if vlan.dhcp is defined %}
{% if vlan.dhcp.enabled %}
interface={{ vlan.name }}
dhcp-range={{ vlan.name }}, {{ vlan.dhcp.rangeStart }}, {{ vlan.dhcp.rangeEnd }}, 48h
{% endif %}
{% endif %}
{% endfor %}
{% endif %}

# Static leases:
{% if hostvars[inventory_hostname].dhcpStaticLeases is defined %}
{% for lease in hostvars[inventory_hostname].dhcpStaticLeases %}
dhcp-host={{ lease.mac }}, {{ lease.name }}, {{ lease.ip }}
{% endfor %}
{% endif %}

bind-interfaces

domain=t4cc0.re
domain=wifi.t4cc0.re,10.8.0.0/16

#enable-ra

# WPAD for weird Win 7 devices
dhcp-option=252,"\n"

# Send RFC-3397 DNS domain search DHCP option. WARNING: Your DHCP client
# probably doesn't support this......
dhcp-option=option:domain-search,t4cc0.re

# Send microsoft-specific option to tell windows to release the DHCP lease
# when it shuts down. Note the "i" flag, to tell dnsmasq to send the
# value as a four-byte integer - that's what microsoft wants. See
# http://technet2.microsoft.com/WindowsServer/en/library/a70f1bb7-d2d4-49f0-96d6-4b7414ecfaae1033.mspx?mfr=true
dhcp-option=vendor:MSFT,2,1i

dhcp-boot=undionly.kpxe
dhcp-match=set:ipxe,175 # iPXE sends a 175 option.
dhcp-boot=tag:ipxe,http://boot.ipxe.org/demo/boot.php

# Enable dnsmasq's built-in TFTP server
enable-tftp

# Set the root directory for files available via FTP.
tftp-root=/var/tftp

# Make the TFTP server more secure: with this set, only files owned by
# the user dnsmasq is running as will be send over the net.
#tftp-secure

# This option stops dnsmasq from negotiating a larger blocksize for TFTP
# transfers. It will slow things down, but may rescue some broken TFTP
# clients.
#tftp-no-blocksize

# Set the limit on DHCP leases, the default is 150
dhcp-lease-max=1500

# The DHCP server needs somewhere on disk to keep its lease database.
# This defaults to a sane location, but if you want to change it, use
# the line below.
#dhcp-leasefile=/var/lib/misc/dnsmasq.leases

dhcp-authoritative

# Run an executable when a DHCP lease is created or destroyed.
# The arguments sent to the script are "add" or "del",
# then the MAC address, the IP address and finally the hostname
# if there is one.
#dhcp-script=/bin/echo

# Set the cachesize here.
cache-size=1500
no-negcache

log-queries
log-dhcp
